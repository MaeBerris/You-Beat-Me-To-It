{"version":3,"sources":["assets/sounds/add2.mp3","assets/sounds/remove2.mp3","assets/cassette.png","FirebaseContext.js","CurrentUserContext.js","LobbyContext.js","GameRoomContext.js","COLORS.js","components/Background/Background.js","ip.js","components/Header/Header.js","components/Labels/GenericLabel.js","components/Button/Button.js","components/Spinner/Spinner.js","components/SignIn/SignIn.js","components/SignIn/HostHandler.js","components/SignIn/PlayerHandler.js","components/Lobby/Results.js","components/Lobby/Search.js","components/Lobby/SelectedPlaylist.js","components/Lobby/Users.js","components/Lobby/SelectedPlaylistPlayer.js","components/Lobby/HostLobby.js","components/ErrorScreen/ErrorScreen.js","components/ErrorScreen/GameInProgress.js","components/Lobby/LobbyWrapper.js","components/GameRoom/ProgressBar.js","components/GameRoom/Cassette.js","components/GameRoom/LevenTest.js","components/GameRoom/SearchBar.js","components/GameRoom/PreviousSongs.js","components/GameRoom/Ranking.js","components/GameRoom/GameRoom.js","components/GameRoom/GameOver.js","components/GameRoom/GameRoomWrapper.js","GlobalStyles.js","components/App.js","index.js"],"names":["module","exports","FireBaseContext","createContext","firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FireBaseContextProvider","children","Provider","CurrentUserContext","React","CurrentUserContextProvider","useState","currentRoomId","setCurrentRoomId","currentUser","setCurrentUser","usersList","setUsersList","artist","songName","time","correctGuess","setCorrectGuess","currentTrackGuesses","setCurrentTrackGuesses","undefined","isHostPresent","setIsHostPresent","console","log","useEffect","RoomRef","ref","length","onDisconnect","remove","cancel","playerId","on","snapshot","players","val","SortedArray","Object","values","sort","a","b","points","host","find","user","role","value","LobbyContext","initialState","searchResults","selectedPlaylist","loadState","Reducer","state","action","type","playlist","id","Error","LobbyContextProvider","useReducer","playlistState","dispatch","roomIdState","setRoomId","location","setLocation","roomExists","setRoomExists","roomLocationRef","locationFromDatabase","off","startSearch","receivePlaylists","data","selectPlaylist","deletePlaylist","GameRoomContext","GameRoomContextProvider","trackUrl","setTrackUrl","gamePhase","setGamePhase","trackInfo","setTrackInfo","historyArray","setHistoryArray","result","setResult","round","setRound","GameRoomId","gameRoomExists","setGameRoomExists","gameStarted","setGameStarted","COLORS","main","secondary","tertiary","midnight","Wrapper","styled","div","Shape1","Shape2","Shape3","ChildWrapper","Footer","Link","Background","href","target","size","ip","Beat","Shape","Header","useHistory","Content","GenericLabel","Button","handler","disabled","StyledButton","onClick","button","Spinner","color","SpinWheel","props","Spin","keyframes","FiLoader","Input","input","SignInHost","buttonHandler","buttonMessage","nickName","setNickName","loading","setLoading","error","setError","useContext","history","roomId","useParams","onKeyDown","ev","key","onChange","hostHandler","fetch","method","body","JSON","stringify","headers","Accept","then","res","ok","json","userInfo","push","roomInfo","catch","err","PlayerHandler","Results","setIsOpen","animation","setAnimation","style","height","display","alignItems","onAnimationEnd","map","item","ResultWrapper","Image","src","picture_medium","ResultsInfo","Title","title","Tracks","nb_tracks","Open","Close","img","p","Search","searchTerm","setSearchTerm","isOpen","SearchPlaylist","TopBar","placeholder","string","split","join","searchToUrl","SpinnerPosition","SelectedPlaylist","Icon","Users","previousPlayers","useRef","current","usePrevious","isCopied","setIsCopied","addUserRef","removeUserRef","play","addUser","List","index","User","navigator","clipboard","writeText","window","ColorsAnimation","Props","SelectedPlaylistPlayer","validatePlaylist","Promise","resolve","reject","promise","BottomSection","ButtonWrapper","BigButton","ErrorAnimation","ErrorMessage","Text","HostLobby","keys","ErrorScreen","message","spinner","Message","GameInProgress","RoundCounter","RoundSpan","span","LobbyWrapper","roomRef","exists","confirm","SignIn","ProgressBar","barRef","calculateGuessPosition","position","clientWidth","toFixed","Bar","guess","Guess","Tip","Transform","Cassette","setArtist","setSongName","name","title_short","cassette","Counter","Label","SongName","PlaceHolder","SongNameSpan","Separator","ArtistSpan","Appear","calculateDistance","artistOrSongName","valueToSearch","artistOrSong","toLowerCase","wordsArray","allSubStrings","forEach","word","i","trim","newArray","slice","ArtistResultMap","searchingFor","distance","leven","marginOfError","Math","floor","fetchHelper","SearchBar","placeHolderText","setPlaceHolderText","artistResult","songNameResult","timeStamp","Date","getTime","previousGuess","Fail","PreviousSong","SongListWrapper","song","SongInfoWrapper","SongArt","album","cover_medium","InfoSection","Artist","reverse","Ranking","UsersListWrapper","UserWrapper","InfoWrapper","Rank","UserInfoWrapper","NameWrapper","UserName","CorrectGuessWrapper","usersCorrectGuess","ScoreInfoWrapper","Score","h1","asyncRequest","currentPhase","accept","Player","audio","Slider","SlidderWrapper","GameRoom","setTime","volume","setVolume","audioRef","interval","setInterval","clearInterval","phase","pause","currentTrackInfo","preview","min","max","GameOverScreen","ButtonsWrapper","GameRoomWrapper","GameOver","GlobalStyle","createGlobalStyle","App","exact","path","HostHandler","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb19aeb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add2.d31c69da.mp3\";","module.exports = __webpack_public_path__ + \"static/media/remove2.120df319.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cassette.9ea9d06a.png\";","import React, { createContext } from \"react\";\r\nimport * as firebase from \"firebase\";\r\n\r\nexport const FireBaseContext = createContext(null);\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCvDktR2m3-rIU3ddPsLkqT2Yfp4EASteA\",\r\n  authDomain: \"you-beat-me-to-it.firebaseapp.com\",\r\n  databaseURL: \"https://you-beat-me-to-it.firebaseio.com\",\r\n  projectId: \"you-beat-me-to-it\",\r\n  storageBucket: \"you-beat-me-to-it.appspot.com\",\r\n  messagingSenderId: \"1075878771170\",\r\n  appId: \"1:1075878771170:web:253cca6ef4a7e1e7a8e1bb\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst FireBaseContextProvider = ({ children }) => {\r\n  return (\r\n    <FireBaseContext.Provider firebaseApp={firebaseApp}>\r\n      {children}\r\n    </FireBaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FireBaseContextProvider;\r\n","import React from \"react\";\r\nimport * as firebase from \"firebase\";\r\n\r\nexport const CurrentUserContext = React.createContext(null);\r\n\r\nconst CurrentUserContextProvider = ({ children }) => {\r\n  const [currentRoomId, setCurrentRoomId] = React.useState(null);\r\n  const [currentUser, setCurrentUser] = React.useState(null);\r\n  const [usersList, setUsersList] = React.useState(null);\r\n  const [correctGuess, setCorrectGuess] = React.useState({\r\n    artist: false,\r\n    songName: false,\r\n    time: null,\r\n  });\r\n  const [currentTrackGuesses, setCurrentTrackGuesses] = React.useState({});\r\n  const [isHostPresent, setIsHostPresent] = React.useState(undefined);\r\n  console.log(\"isHostPresentContext\", isHostPresent);\r\n\r\n  React.useEffect(() => {\r\n    if (currentUser && usersList) {\r\n      const RoomRef = firebase.database().ref(`Rooms/${currentRoomId}`);\r\n      if (usersList.length === 1) {\r\n        RoomRef.onDisconnect().remove();\r\n      } else {\r\n        RoomRef.onDisconnect().cancel();\r\n      }\r\n      const playerRef = firebase\r\n        .database()\r\n        .ref(`Rooms/${currentRoomId}/players/${currentUser.playerId}`);\r\n\r\n      playerRef.onDisconnect().remove();\r\n    }\r\n  }, [currentUser, currentRoomId, usersList]);\r\n\r\n  React.useEffect(() => {\r\n    if (currentRoomId) {\r\n      const PlayersRef = firebase\r\n        .database()\r\n        .ref(`Rooms/${currentRoomId}/players`);\r\n      PlayersRef.on(\"value\", (snapshot) => {\r\n        const players = snapshot.val();\r\n        console.log(\"players\", players);\r\n        if (players === null) {\r\n          setIsHostPresent(false);\r\n        }\r\n        if (players) {\r\n          const SortedArray = Object.values(players).sort((a, b) => {\r\n            return b.points - a.points;\r\n          });\r\n          let host = SortedArray.find((user) => {\r\n            if (user.role === \"host\") {\r\n              return true;\r\n            }\r\n          });\r\n          console.log(\"host\", host);\r\n          if (host) {\r\n            setIsHostPresent(true);\r\n          } else {\r\n            setIsHostPresent(false);\r\n          }\r\n          setUsersList(SortedArray);\r\n        }\r\n      });\r\n    }\r\n  }, [setUsersList, currentRoomId]);\r\n\r\n  React.useEffect(() => {\r\n    const currentGuessesRef = firebase\r\n      .database()\r\n      .ref(`Rooms/${currentRoomId}/currentTrack/correctGuesses`);\r\n\r\n    currentGuessesRef.on(\"value\", (snapshot) => {\r\n      setCurrentTrackGuesses(snapshot.val());\r\n    });\r\n  }, [currentRoomId]);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider\r\n      value={{\r\n        currentUser,\r\n        setCurrentUser,\r\n        usersList,\r\n        setUsersList,\r\n        correctGuess,\r\n        setCorrectGuess,\r\n        setCurrentRoomId,\r\n        currentTrackGuesses,\r\n        isHostPresent,\r\n      }}\r\n    >\r\n      {children}\r\n    </CurrentUserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CurrentUserContextProvider;\r\n","import React from \"react\";\r\nimport * as firebase from \"firebase\";\r\n\r\nexport const LobbyContext = React.createContext(null);\r\n\r\nconst initialState = {\r\n  searchResults: null,\r\n  selectedPlaylist: {},\r\n  loadState: \"idle\",\r\n};\r\n\r\nfunction Reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"start-search\": {\r\n      return { ...state, loadState: \"loading\" };\r\n    }\r\n    case \"receive-playlists\": {\r\n      return { ...state, searchResults: action.playlist, loadState: \"idle\" };\r\n    }\r\n    case \"select-playlist\": {\r\n      const selectedPlaylist = { [action.playlist.id]: action.playlist };\r\n      return { ...state, selectedPlaylist: selectedPlaylist };\r\n    }\r\n    case \"delete-playlist\": {\r\n      return { ...state, selectedPlaylist: {} };\r\n    }\r\n    default:\r\n      throw new Error(\"Unrecognized Action\");\r\n  }\r\n}\r\n\r\nconst LobbyContextProvider = ({ children }) => {\r\n  const [playlistState, dispatch] = React.useReducer(Reducer, initialState);\r\n  const [roomIdState, setRoomId] = React.useState(null);\r\n  const [location, setLocation] = React.useState(\"lobby\");\r\n  const [roomExists, setRoomExists] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    const roomLocationRef = firebase\r\n      .database()\r\n      .ref(`Rooms/${roomIdState}/roomLocation`);\r\n\r\n    roomLocationRef.on(\"value\", (snapshot) => {\r\n      let locationFromDatabase = snapshot.val();\r\n\r\n      setLocation(locationFromDatabase);\r\n    });\r\n    return () => {\r\n      roomLocationRef.off();\r\n    };\r\n  }, [roomIdState, location]);\r\n\r\n  const startSearch = () => {\r\n    dispatch({ type: \"start-search\" });\r\n  };\r\n\r\n  const receivePlaylists = (data) => {\r\n    dispatch({ type: \"receive-playlists\", playlist: data });\r\n  };\r\n\r\n  const selectPlaylist = (data) => {\r\n    dispatch({ type: \"select-playlist\", playlist: data });\r\n  };\r\n\r\n  const deletePlaylist = (data) => {\r\n    dispatch({ type: \"delete-playlist\" });\r\n  };\r\n  return (\r\n    <LobbyContext.Provider\r\n      value={{\r\n        playlistState,\r\n        startSearch,\r\n        receivePlaylists,\r\n        selectPlaylist,\r\n        deletePlaylist,\r\n        roomIdState,\r\n        setRoomId,\r\n        location,\r\n        roomExists,\r\n        setRoomExists,\r\n      }}\r\n    >\r\n      {children}\r\n    </LobbyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LobbyContextProvider;\r\n","import React from \"react\";\r\nimport * as firebase from \"firebase\";\r\n\r\nexport const GameRoomContext = React.createContext(null);\r\n\r\nconst GameRoomContextProvider = ({ children }) => {\r\n  const [trackUrl, setTrackUrl] = React.useState(null);\r\n  const [gamePhase, setGamePhase] = React.useState(null);\r\n  const [trackInfo, setTrackInfo] = React.useState(null);\r\n  const [historyArray, setHistoryArray] = React.useState([]);\r\n  const [result, setResult] = React.useState(null);\r\n  const [round, setRound] = React.useState(0);\r\n  const [GameRoomId, setRoomId] = React.useState(null);\r\n  const [gameRoomExists, setGameRoomExists] = React.useState(undefined);\r\n  const [gameStarted, setGameStarted] = React.useState(false);\r\n\r\n  console.log(\"inContextPhase\", gamePhase);\r\n\r\n  React.useEffect(() => {\r\n    const roundRef = firebase.database().ref(`Rooms/${GameRoomId}/round`);\r\n    roundRef.on(\"value\", (snapshot) => {\r\n      setRound(snapshot.val());\r\n    });\r\n\r\n    return () => {\r\n      const roundRef = firebase.database().ref(`Rooms/${GameRoomId}/round`);\r\n      roundRef.off();\r\n    };\r\n  }, [GameRoomId]);\r\n\r\n  React.useEffect(() => {\r\n    if (trackInfo) {\r\n      setHistoryArray([...historyArray, trackInfo]);\r\n    }\r\n  }, [trackInfo]);\r\n\r\n  return (\r\n    <GameRoomContext.Provider\r\n      value={{\r\n        trackUrl,\r\n        setTrackUrl,\r\n        gamePhase,\r\n        setGamePhase,\r\n        trackInfo,\r\n        setTrackInfo,\r\n        result,\r\n        setResult,\r\n        historyArray,\r\n        setHistoryArray,\r\n        round,\r\n        setRound,\r\n        setRoomId,\r\n        gameRoomExists,\r\n        setGameRoomExists,\r\n        gameStarted,\r\n        setGameStarted,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameRoomContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GameRoomContextProvider;\r\n","const COLORS = {\r\n  main: \"rgb(67, 153, 222)\",\r\n  secondary: \"rgb(223, 25, 93)\",\r\n  tertiary: \"#ffc94a\",\r\n  // midnight: \"#893dd4\",\r\n  midnight: \"#6c2fa8\",\r\n};\r\n\r\nexport default COLORS;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport COLORS from \"../../COLORS\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\n\r\nconst Background = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Shape1></Shape1>\r\n      <Shape2></Shape2>\r\n      <Shape3></Shape3>\r\n      <ChildWrapper>{children}</ChildWrapper>\r\n      <Footer>\r\n        © Mae Berris 2020{\" \"}\r\n        <Link\r\n          href=\"https://github.com/MaeBerris/You-Beat-Me-To-It\"\r\n          target=\"_blank\"\r\n        >\r\n          <AiFillGithub size={20} />\r\n        </Link>\r\n      </Footer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: ${COLORS.main};\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Shape1 = styled.div`\r\n  width: 500px;\r\n  height: 800px;\r\n  border-radius: 50%;\r\n  transform: rotate(20deg);\r\n  position: absolute;\r\n  top: -400px;\r\n  left: -100px;\r\n  background-color: ${COLORS.secondary};\r\n`;\r\n\r\nconst Shape2 = styled.div`\r\n  width: 500px;\r\n  height: 500px;\r\n  transform: rotate(55deg);\r\n  position: absolute;\r\n  bottom: -450px;\r\n  right: 300px;\r\n  background-color: ${COLORS.tertiary};\r\n`;\r\n\r\nconst Shape3 = styled.div`\r\n  border-bottom: 400px solid ${COLORS.midnight};\r\n  border-left: 55px solid transparent;\r\n  border-right: 55px solid transparent;\r\n  height: 0px;\r\n  width: 350px;\r\n  position: absolute;\r\n  right: -150px;\r\n  top: 20%;\r\n  transform: rotate(70deg);\r\n`;\r\n\r\nconst ChildWrapper = styled.div`\r\n  position: relative;\r\n  z-index: 3;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  position: absolute;\r\n  color: white;\r\n  right: 15px;\r\n  bottom: 15px;\r\n  font-size: 20px;\r\n  z-index: 3;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  color: white;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  margin-left: 5px;\r\n`;\r\nexport default Background;\r\n","export const ip = \"https://you-beat-me-to-it.herokuapp.com\";\r\n// export const ip = \"http://localhost:8000\";\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport COLORS from \"../../COLORS\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ip } from \"../../ip\";\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Wrapper href={\"https://you-beat-me-to-it.web.app/\"}>\r\n      You <Beat>Beat</Beat> Me To It !\r\n      <Shape />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.a`\r\n  display: block;\r\n  text-decoration: none;\r\n  position: relative;\r\n  text-align: center;\r\n  width: fit-content;\r\n  color: white;\r\n  font-size: 100px;\r\n  font-family: \"Echizen\";\r\n  margin: 0 auto;\r\n  margin-top: 25px;\r\n  margin-bottom: 50px;\r\n  text-shadow: 2px 2px 0px ${COLORS.midnight};\r\n  line-height: 70%;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Beat = styled.div`\r\n  /* background: linear-gradient(\r\n    to right,\r\n    ${COLORS.tertiary},\r\n    ${COLORS.secondary}\r\n  ); */\r\n  display: block;\r\n  width: fit-content;\r\n  margin: 0 auto;\r\n  /* transform: skew(9deg); */\r\n  padding: 0px 5px;\r\n  color: ${COLORS.midnight};\r\n  text-shadow: 2px 2px 0px white;\r\n  /* border-bottom: 5px solid ${COLORS.midnight}; */\r\n  font-family: \"Echizen\";\r\n`;\r\n\r\nconst Shape = styled.div`\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 150px solid transparent;\r\n  border-right: 150px solid transparent;\r\n  border-bottom: 250px solid #ff33be;\r\n  /* border-bottom: 250px solid ${COLORS.tertiary}; */\r\n  position: absolute;\r\n  z-index: -3;\r\n  top: -20px;\r\n  left: -20px;\r\n`;\r\n\r\n// const Beat = styled.span`\r\n//   background: -webkit-linear-gradient(${COLORS.tertiary}, ${COLORS.secondary});\r\n//   -webkit-background-clip: text;\r\n//   -webkit-text-fill-color: transparent;\r\n//   font-family: \"Echizen\";\r\n// `;\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GenericLabel = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Content>{children}</Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  transform: skew(9deg);\r\n  background: white;\r\n  font-size: 40px;\r\n  padding: 5px;\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  transform: skew(-9deg);\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport default GenericLabel;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport COLORS from \"../../COLORS\";\r\n\r\nconst Button = ({ children, handler, disabled }) => {\r\n  return (\r\n    <StyledButton onClick={handler} disabled={disabled}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nconst StyledButton = styled.button`\r\n  height: 50px;\r\n  border-radius: 30px;\r\n  font-weight: 700;\r\n  padding: 5px 20px;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  color: white;\r\n  border: none;\r\n  background: linear-gradient(\r\n    to right,\r\n    ${COLORS.tertiary},\r\n    ${COLORS.secondary}\r\n  );\r\n  backdrop-filter: none;\r\n  transition: filter 0.3s;\r\n\r\n  :hover {\r\n    filter: saturate(150%);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { FiLoader } from \"react-icons/fi\";\r\n\r\nconst Spinner = ({ size, color }) => {\r\n  return (\r\n    <Wrapper color={color}>\r\n      <SpinWheel size={size} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Spin = keyframes`\r\nfrom{\r\n  transform: rotate(0deg)\r\n}to{\r\n  transform: rotate(360deg)\r\n}`;\r\n\r\nconst SpinWheel = styled(FiLoader)`\r\n  animation: ${Spin} 2000ms linear infinite;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenericLabel from \"../Labels/GenericLabel\";\r\nimport Button from \"../Button/Button\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst SignInHost = ({ buttonHandler, buttonMessage }) => {\r\n  console.log(\"inSignIn\");\r\n  const [nickName, setNickName] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [error, setError] = React.useState(false);\r\n  const { setCurrentUser } = React.useContext(CurrentUserContext);\r\n  const history = useHistory();\r\n  const { roomId } = useParams();\r\n  return (\r\n    <Wrapper>\r\n      <GenericLabel>Nickname:</GenericLabel>\r\n      <Input\r\n        value={nickName}\r\n        onKeyDown={(ev) => {\r\n          if (ev.key === \"Enter\" && nickName.length >= 1 && !loading) {\r\n            setLoading(true);\r\n            buttonHandler({\r\n              nickName,\r\n              setNickName,\r\n              setCurrentUser,\r\n              history,\r\n              roomId,\r\n              setLoading,\r\n              setError,\r\n            });\r\n          }\r\n        }}\r\n        onChange={(ev) => {\r\n          if (ev.target.value.length > 30) {\r\n          } else {\r\n            setNickName(ev.target.value);\r\n          }\r\n        }}\r\n      />\r\n      <Button\r\n        disabled={nickName.length < 1 || loading}\r\n        handler={() => {\r\n          setLoading(true);\r\n          buttonHandler({\r\n            nickName,\r\n            setNickName,\r\n            setCurrentUser,\r\n            history,\r\n            roomId,\r\n            setLoading,\r\n            setError,\r\n          });\r\n        }}\r\n      >\r\n        {loading ? <Spinner /> : buttonMessage}\r\n      </Button>\r\n      {error && (\r\n        <Error>Something went wrong, please refresh and try again</Error>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 100px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 400px;\r\n  height: 50px;\r\n  color: black;\r\n  border-radius: 30px;\r\n  border: none;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  margin-bottom: 15px;\r\n\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: 0 0 5px black;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  font-size: 20px;\r\n  color: white;\r\n`;\r\n\r\nexport default SignInHost;\r\n","const hostHandler = ({\r\n  nickName,\r\n  setNickName,\r\n  setCurrentUser,\r\n  history,\r\n  setLoading,\r\n  setError,\r\n}) => {\r\n  setLoading(true);\r\n  fetch(\"https://you-beat-me-to-it.herokuapp.com/createRoom\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      nickName: nickName,\r\n    }),\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        throw new Error(\"Something went wrong, refresh and try again\");\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      setNickName(\"\");\r\n      setCurrentUser(data.userInfo);\r\n      setLoading(false);\r\n      history.push(`/lobby/${data.roomInfo.roomId}`);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      setError(err);\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport default hostHandler;\r\n","const PlayerHandler = ({\r\n  nickName,\r\n  setNickName,\r\n  setCurrentUser,\r\n  history,\r\n  roomId,\r\n  setLoading,\r\n  setError,\r\n}) => {\r\n  setLoading(true);\r\n  fetch(`https://you-beat-me-to-it.herokuapp.com/${roomId}/createUser`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      nickName: nickName,\r\n    }),\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        throw new Error(\"Something went wrong, please try again\");\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((data) => {\r\n      setNickName(\"\");\r\n      setLoading(false);\r\n      setCurrentUser(data.userInfo);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      setError(err);\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport default PlayerHandler;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { LobbyContext } from \"../../LobbyContext\";\r\n\r\nconst Results = ({ setIsOpen }) => {\r\n  const { playlistState, selectPlaylist } = React.useContext(LobbyContext);\r\n  const [animation, setAnimation] = React.useState(\"open\");\r\n\r\n  if (playlistState.searchResults.length === 0) {\r\n    return (\r\n      <Wrapper\r\n        style={{ height: \"50px\", display: \"flex\", alignItems: \"center\" }}\r\n        animation={animation}\r\n        onAnimationEnd={() => {\r\n          if (animation === \"close\") {\r\n            setIsOpen(false);\r\n          }\r\n        }}\r\n      >\r\n        No Results found\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return (\r\n    <Wrapper\r\n      animation={animation}\r\n      onAnimationEnd={() => {\r\n        if (animation === \"close\") {\r\n          setIsOpen(false);\r\n        }\r\n      }}\r\n    >\r\n      {playlistState.searchResults.map((item) => {\r\n        return (\r\n          <ResultWrapper\r\n            key={item.id}\r\n            onClick={() => {\r\n              selectPlaylist(item);\r\n              // setIsOpen(false);\r\n              setAnimation(\"close\");\r\n            }}\r\n          >\r\n            <Image src={item.picture_medium} />\r\n            <ResultsInfo>\r\n              <Title>{item.title}</Title>\r\n              <Tracks>{item.nb_tracks} tracks</Tracks>\r\n            </ResultsInfo>\r\n          </ResultWrapper>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n\r\nconst Open = keyframes`\r\nfrom{\r\n  transform: scaleY(0)\r\n}to{\r\n  transform: scaleY(1)\r\n}\r\n`;\r\n\r\nconst Close = keyframes`\r\nfrom{\r\n  transform: scaleY(1)\r\n}to{\r\n  transform: scaleY(0)\r\n}\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  font-size: 30px;\r\n  max-height: 300px;\r\n  overflow: scroll;\r\n  color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  background: white;\r\n  margin-bottom: 15px;\r\n  overflow-x: hidden;\r\n  transform-origin: top;\r\n  animation: ${(props) => (props.animation === \"open\" ? Open : Close)} 220ms\r\n    ease-in-out;\r\n  animation-fill-mode: forwards;\r\n`;\r\n\r\nconst ResultWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  :hover {\r\n    background: #eadaf0;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 75px;\r\n  height: 75px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ResultsInfo = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: 90%;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst Tracks = styled.p`\r\n  font-size: 70%;\r\n  font-weight: 400;\r\n  color: lightgrey;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenericLabel from \"../Labels/GenericLabel\";\r\n// import Button from \"../Button/Button\";\r\nimport { LobbyContext } from \"../../LobbyContext\";\r\nimport Results from \"./Results\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { ip } from \"../../ip\";\r\n\r\nfunction searchToUrl(searchTerm) {\r\n  const searchArray = searchTerm.split(\" \");\r\n  const searchString = searchArray.join(\"%20\");\r\n  return searchString;\r\n}\r\n\r\nconst Search = () => {\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n  const [isOpen, setIsOpen] = React.useState(\"false\");\r\n  const { playlistState, startSearch, receivePlaylists } = React.useContext(\r\n    LobbyContext\r\n  );\r\n  return (\r\n    <SearchPlaylist>\r\n      <GenericLabel>Search for a playlist:</GenericLabel>\r\n      <TopBar>\r\n        <Input\r\n          value={searchTerm}\r\n          placeholder=\"Ex: Best of the 80's\"\r\n          onChange={(ev) => setSearchTerm(ev.target.value)}\r\n          onKeyDown={(ev) => {\r\n            switch (ev.key) {\r\n              case \"Enter\": {\r\n                if (searchTerm.length > 1) {\r\n                  startSearch();\r\n                  let string = searchToUrl(searchTerm);\r\n                  fetch(`${ip}/searchPlaylist?searchTerm=${string}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                      Accept: \"application/json\",\r\n                      \"Content-Type\": \"application/json\",\r\n                    },\r\n                  })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                      receivePlaylists(data.searchResults);\r\n                      setIsOpen(true);\r\n                    });\r\n                }\r\n                break;\r\n              }\r\n              default: {\r\n              }\r\n            }\r\n          }}\r\n        />\r\n        {playlistState.loadState === \"loading\" && (\r\n          <SpinnerPosition>\r\n            <Spinner size={35} color={\"grey\"} />\r\n          </SpinnerPosition>\r\n        )}\r\n      </TopBar>\r\n      {playlistState.loadState === \"idle\" &&\r\n      playlistState.searchResults !== null &&\r\n      isOpen === true ? (\r\n        <Results setIsOpen={setIsOpen} />\r\n      ) : null}\r\n    </SearchPlaylist>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\nconst SearchPlaylist = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n`;\r\n\r\nconst TopBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst SpinnerPosition = styled.div`\r\n  width: fit-content;\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 20px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 55px;\r\n  color: black;\r\n  border-radius: 40px;\r\n  border: none;\r\n  text-align: left;\r\n  font-size: 40px;\r\n  padding: 0 30px;\r\n  margin-top: 10px;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border: 1px solid red;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #eadaf0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenericLabel from \"../Labels/GenericLabel\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { LobbyContext } from \"../../LobbyContext\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { ip } from \"../../ip\";\r\n\r\nconst SelectedPlaylist = () => {\r\n  const { playlistState, deletePlaylist } = React.useContext(LobbyContext);\r\n  const { roomId } = useParams();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${ip}/updatePlaylist`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        selectedPlaylist: playlistState.selectedPlaylist,\r\n        roomId: roomId,\r\n      }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [playlistState.selectedPlaylist, roomId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <GenericLabel>Selected Playlist:</GenericLabel>\r\n      {Object.values(playlistState.selectedPlaylist).map((item) => {\r\n        return (\r\n          <ResultWrapper key={item.id} onClick={() => {}}>\r\n            <Image src={item.picture_medium} />\r\n            <ResultsInfo>\r\n              <Title>{item.title}</Title>\r\n              <Tracks>{item.nb_tracks} tracks</Tracks>\r\n            </ResultsInfo>\r\n            <Icon\r\n              onClick={(ev) => {\r\n                deletePlaylist(item);\r\n              }}\r\n            >\r\n              <FiX size={35} color={\"lightgray\"} />\r\n            </Icon>\r\n          </ResultWrapper>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SelectedPlaylist;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 30px;\r\n  padding-right: 20px;\r\n`;\r\n\r\nconst ResultWrapper = styled.div`\r\n  background: white;\r\n  border-radius: 15px;\r\n  width: fit-content;\r\n  max-width: 100%;\r\n  display: flex;\r\n  padding: 10px;\r\n  position: relative;\r\n  min-width: 50%;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 75px;\r\n  height: 75px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ResultsInfo = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: 80%;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst Tracks = styled.p`\r\n  font-size: 70%;\r\n  font-weight: 400;\r\n  color: lightgrey;\r\n`;\r\n\r\nconst Icon = styled.button`\r\n  color: red;\r\n  position: absolute;\r\n  border: none;\r\n  cursor: pointer;\r\n  top: 0;\r\n  right: 0;\r\n  background: none;\r\n`;\r\n","import React, { useRef } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport GenericLabel from \"../Labels/GenericLabel\";\r\nimport COLORS from \"../../COLORS\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AiFillCrown } from \"react-icons/ai\";\r\nimport addUser from \"../../assets/sounds/add2.mp3\";\r\nimport remove from \"../../assets/sounds/remove2.mp3\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n\r\n  React.useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  return ref.current;\r\n}\r\n\r\nconst Users = () => {\r\n  const { usersList, currentUser, setCurrentRoomId } = React.useContext(\r\n    CurrentUserContext\r\n  );\r\n  const previousPlayers = usePrevious(usersList);\r\n\r\n  const { roomId } = useParams();\r\n  const [isCopied, setIsCopied] = React.useState(false);\r\n  const addUserRef = React.useRef(null);\r\n  const removeUserRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (previousPlayers) {\r\n      if (previousPlayers.length > usersList.length) {\r\n        console.log(\"lost a player\");\r\n        removeUserRef.current.play();\r\n      } else {\r\n        console.log(\"won a player\");\r\n        addUserRef.current.play();\r\n      }\r\n    }\r\n  }, [usersList, addUserRef]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentRoomId(roomId);\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <audio src={addUser} ref={addUserRef}></audio>\r\n      <audio src={remove} ref={removeUserRef}></audio>\r\n      <GenericLabel>Players:</GenericLabel>\r\n      {usersList !== null ? (\r\n        <List>\r\n          {usersList.map((user, index) => {\r\n            return (\r\n              <User\r\n                key={user.nickName + index}\r\n                style={{\r\n                  color: `${\r\n                    currentUser.playerId === user.playerId\r\n                      ? COLORS.midnight\r\n                      : \"black\"\r\n                  }`,\r\n                }}\r\n              >\r\n                {user.role === \"host\" ? (\r\n                  <Icon>\r\n                    <AiFillCrown />\r\n                  </Icon>\r\n                ) : null}\r\n                {user.nickName}\r\n              </User>\r\n            );\r\n          })}\r\n          <StyledButton\r\n            isCopied={isCopied}\r\n            onClick={() => {\r\n              setIsCopied(true);\r\n              navigator.clipboard.writeText(window.location);\r\n            }}\r\n            onAnimationEnd={() => {\r\n              setIsCopied(false);\r\n            }}\r\n          >\r\n            {isCopied ? \"Copied !\" : \"Copy Invite Link\"}\r\n          </StyledButton>\r\n        </List>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst List = styled.div`\r\n  background: white;\r\n  border-radius: 15px;\r\n  padding: 10px 30px;\r\n  min-width: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst User = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  width: fit-content;\r\n  position: absolute;\r\n  left: 0;\r\n  transform: translateX(-100%);\r\n  margin: 0;\r\n`;\r\n\r\nconst ColorsAnimation = keyframes`\r\n0%{\r\n  background-position: 0% 0%;\r\n  );\r\n}20%{\r\n  background-position: 100% 0%;\r\n} 80% {\r\n  background-position: 100% 0%;\r\n}\r\n100%{\r\n  background-position: 0% 0%;\r\n}`;\r\n\r\nconst StyledButton = styled.button`\r\n  height: 50px;\r\n  border-radius: 30px;\r\n  font-weight: 700;\r\n  width: 80%;\r\n  padding: 5px 20px;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  color: white;\r\n  border: none;\r\n  background: linear-gradient(\r\n    to right,\r\n    ${COLORS.tertiary},\r\n    ${COLORS.secondary},\r\n    #34eb98,\r\n    #34eb98,\r\n    #34eb98\r\n  );\r\n  background-size: 300% 100%;\r\n  overflow: hidden;\r\n  animation: ${(Props) => (Props.isCopied ? ColorsAnimation : null)} 2000ms\r\n    ease-in-out;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GenericLabel from \"../Labels/GenericLabel\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { LobbyContext } from \"../../LobbyContext\";\r\nimport * as firebase from \"firebase\";\r\n\r\nconst SelectedPlaylistPlayer = () => {\r\n  const { playlistState, selectPlaylist, deletePlaylist } = React.useContext(\r\n    LobbyContext\r\n  );\r\n  const { roomId } = useParams();\r\n\r\n  React.useEffect(() => {\r\n    const selectedPlaylistRef = firebase\r\n      .database()\r\n      .ref(`Rooms/${roomId}/selectedPlaylist`);\r\n\r\n    selectedPlaylistRef.on(\"value\", (snapshot) => {\r\n      const playlist = snapshot.val();\r\n\r\n      if (playlist === false) {\r\n        deletePlaylist();\r\n      } else if (playlist) {\r\n        selectPlaylist(Object.values(playlist)[0]);\r\n      }\r\n    });\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <GenericLabel>Selected Playlist:</GenericLabel>\r\n      {Object.values(playlistState.selectedPlaylist).map((item) => {\r\n        return (\r\n          <ResultWrapper key={item.id}>\r\n            <Image src={item.picture_medium} />\r\n            <ResultsInfo>\r\n              <Title>{item.title}</Title>\r\n              <Tracks>{item.nb_tracks} tracks</Tracks>\r\n            </ResultsInfo>\r\n          </ResultWrapper>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SelectedPlaylistPlayer;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 30px;\r\n  padding-right: 20px;\r\n`;\r\n\r\nconst ResultWrapper = styled.div`\r\n  background: white;\r\n  border-radius: 15px;\r\n  width: fit-content;\r\n  max-width: 100%;\r\n  display: flex;\r\n  padding: 10px;\r\n  position: relative;\r\n  min-width: 50%;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 75px;\r\n  height: 75px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ResultsInfo = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: 80%;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst Tracks = styled.p`\r\n  font-size: 70%;\r\n  font-weight: 400;\r\n  color: lightgrey;\r\n`;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport COLORS from \"../../COLORS\";\r\nimport Search from \"./Search\";\r\nimport SelectedPlaylist from \"./SelectedPlaylist\";\r\nimport Users from \"./Users\";\r\nimport SelectedPlaylistPlayer from \"./SelectedPlaylistPlayer\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\nimport { LobbyContext } from \"../../LobbyContext\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { ip } from \"../../ip\";\r\n//added a comment\r\nconst validatePlaylist = async (roomId, playlist) => {\r\n  const promise = await new Promise((resolve, reject) => {\r\n    fetch(`${ip}/validatePlaylist`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({ roomId, selectedPlaylist: playlist }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        reject(err);\r\n      });\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nconst HostLobby = () => {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [error, setError] = React.useState(false);\r\n  const { currentUser } = React.useContext(CurrentUserContext);\r\n  const { playlistState, location } = React.useContext(LobbyContext);\r\n  const { gameStarted } = React.useContext(GameRoomContext);\r\n  const { roomId } = useParams();\r\n  const history = useHistory();\r\n  console.log(\"error\", error);\r\n  React.useEffect(() => {\r\n    if (location === \"gameRoom\" && gameStarted === false) {\r\n      history.push(`/gameroom/${roomId}`);\r\n    }\r\n  }, [roomId, location]);\r\n\r\n  if (currentUser.role === \"player\") {\r\n    return (\r\n      <Wrapper>\r\n        <BottomSection>\r\n          <SelectedPlaylistPlayer />\r\n          <Users />\r\n        </BottomSection>\r\n        <Text>\r\n          Please wait for the host to select a playlist and to start game ...\r\n        </Text>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <Search />\r\n      <BottomSection>\r\n        <SelectedPlaylist />\r\n        <Users />\r\n      </BottomSection>\r\n      <ButtonWrapper>\r\n        {error && <ErrorMessage>Please select a playlist</ErrorMessage>}\r\n        <BigButton\r\n          onClick={async () => {\r\n            if (Object.keys(playlistState.selectedPlaylist).length > 0) {\r\n              setError(false);\r\n              setLoading(true);\r\n              await validatePlaylist(roomId, playlistState.selectedPlaylist);\r\n            } else {\r\n              setError(true);\r\n            }\r\n          }}\r\n        >\r\n          {loading ? <Spinner /> : \"Start Game\"}\r\n        </BigButton>\r\n      </ButtonWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled.div`\r\n  margin-top: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 40px;\r\n  align-items: center;\r\n`;\r\n\r\nconst BottomSection = styled.div`\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 50% 50%;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nconst BigButton = styled.button`\r\n  border-radius: 30px;\r\n  /* font-weight: 700; */\r\n  /* font-family: \"Echizen\"; */\r\n  font-size: 40px;\r\n  padding: 5px 20px;\r\n  cursor: pointer;\r\n  color: white;\r\n  border: none;\r\n  background: linear-gradient(to right, #ff33be, ${COLORS.midnight});\r\n  transition: filter 0.3s;\r\n\r\n  :hover {\r\n    filter: saturate(150%);\r\n  }\r\n  :focus {\r\n    outline: none;\r\n    border: 1px solid white;\r\n    border-radius: 30px;\r\n  }\r\n`;\r\n\r\nconst ErrorAnimation = keyframes`\r\nfrom{\r\n  opacity: 0;\r\n  transform: translateY(100%)\r\n}to{\r\n  opacity: 1;\r\n  transform: translateY(0%)\r\n}`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  font-size: 20px;\r\n  color: white;\r\n  animation: ${ErrorAnimation} 200ms ease-in-out;\r\n  position: absolute;\r\n  top: -25px;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  font-family: \"Echizen\";\r\n  font-size: 60px;\r\n  text-align: center;\r\n  color: white;\r\n  margin: 50px 0;\r\n  text-shadow: 2px 2px 2px ${COLORS.midnight};\r\n`;\r\n\r\nexport default HostLobby;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Label from \"../Labels/GenericLabel\";\r\nimport COLORS from \"../../COLORS\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst ErrorScreen = ({ title, message, spinner }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label>{title}</Label>\r\n      <Message>{message}</Message>\r\n      {spinner && <Spinner color={COLORS.midnight} size={40} />}\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default ErrorScreen;\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  margin-top: 5px;\r\n  font-family: \"Echizen\";\r\n  text-shadow: 2px 2px ${COLORS.midnight};\r\n  color: white;\r\n  font-size: 40px;\r\n  width: 60%;\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Label from \"../Labels/GenericLabel\";\r\nimport COLORS from \"../../COLORS\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst GameInProgress = () => {\r\n  const { roomId } = useParams();\r\n  const { round, setRoomId } = React.useContext(GameRoomContext);\r\n  React.useEffect(() => {\r\n    setRoomId(roomId);\r\n  }, []);\r\n  return (\r\n    <Wrapper>\r\n      <Label>The Game is in Progress</Label>\r\n      <Message>\r\n        Please be patient while the game is in progress. You will be able to\r\n        join when the game ends and the host returns to the lobby.\r\n      </Message>\r\n      <RoundCounter>\r\n        The game you are trying to join is on round :{\" \"}\r\n        <RoundSpan>\r\n          {\" \"}\r\n          {round <= 9 ? round + 1 : round}\r\n          /10\r\n        </RoundSpan>\r\n      </RoundCounter>\r\n      <Spinner color={COLORS.midnight} size={40} />\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default GameInProgress;\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  margin-top: 5px;\r\n  font-family: \"Echizen\";\r\n  text-shadow: 2px 2px ${COLORS.midnight};\r\n  color: white;\r\n  font-size: 40px;\r\n  width: 60%;\r\n  text-align: center;\r\n`;\r\n\r\nconst RoundCounter = styled.div`\r\n  margin-top: 10px;\r\n  font-family: \"Echizen\";\r\n  text-shadow: 2px 2px ${COLORS.midnight};\r\n  color: white;\r\n  font-size: 40px;\r\n  width: 60%;\r\n  text-align: center;\r\n`;\r\n\r\nconst RoundSpan = styled.span`\r\n  font-size: 40px;\r\n  color: ${COLORS.secondary};\r\n  text-shadow: 2px 2px white;\r\n  font-family: \"Echizen\";\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\nimport { LobbyContext } from \"../../LobbyContext\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport PlayerHandler from \"../SignIn/PlayerHandler\";\r\nimport SignIn from \"../SignIn/SignIn\";\r\nimport HostLobby from \"../Lobby/HostLobby\";\r\nimport ErrorScreen from \"../ErrorScreen/ErrorScreen\";\r\nimport GameInProgress from \"../ErrorScreen/GameInProgress\";\r\nimport { ip } from \"../../ip\";\r\nimport * as firebase from \"firebase\";\r\n\r\nconst LobbyWrapper = () => {\r\n  const {\r\n    currentUser,\r\n    setCurrentUser,\r\n    isHostPresent,\r\n    setCurrentRoomId,\r\n  } = React.useContext(CurrentUserContext);\r\n  const {\r\n    setRoomId,\r\n    roomExists,\r\n    setRoomExists,\r\n    location,\r\n    deletePlaylist,\r\n  } = React.useContext(LobbyContext);\r\n  const { setGameStarted, setHistoryArray } = React.useContext(GameRoomContext);\r\n\r\n  const { roomId } = useParams();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const roomRef = firebase.database().ref(`Rooms/${roomId}`);\r\n\r\n    roomRef.on(\"value\", (snapshot) => {\r\n      setRoomExists(snapshot.exists());\r\n    });\r\n\r\n    return () => {\r\n      roomRef.off();\r\n    };\r\n  }, [roomId]);\r\n\r\n  React.useEffect(() => {\r\n    setRoomId(roomId);\r\n    setCurrentRoomId(roomId);\r\n  }, [roomId]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(history.action);\r\n\r\n    return () => {\r\n      console.log(history.action);\r\n      if (history.action === \"POP\" && location === \"lobby\" && currentUser)\r\n        if (\r\n          window.confirm(\"do you really want to leave ?\") &&\r\n          currentUser !== null\r\n        ) {\r\n          setCurrentUser(null);\r\n          setGameStarted(false);\r\n          deletePlaylist();\r\n          setHistoryArray([]);\r\n          fetch(`${ip}/deleteUser`, {\r\n            method: \"DELETE\",\r\n            body: JSON.stringify({ currentUser, roomId }),\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => console.log(data));\r\n          history.push(\"/\");\r\n          return;\r\n        } else if (location === \"lobby\") {\r\n          console.log(\"history push from Lobby\");\r\n          history.push(`/lobby/${roomId}`);\r\n        }\r\n    };\r\n  }, [history, location]);\r\n\r\n  if (roomExists === false) {\r\n    return (\r\n      <ErrorScreen\r\n        title=\"404 - Room not found\"\r\n        message=\"We're sorry, we couldn't find the room you are trying to join\"\r\n      />\r\n    );\r\n  }\r\n  if (isHostPresent === false) {\r\n    return (\r\n      <ErrorScreen\r\n        title=\"The host has left\"\r\n        message=\"We're sorry, the host has left and the game has ended. Return to the homepage to start a new game.\"\r\n      />\r\n    );\r\n  }\r\n  if (\r\n    !currentUser &&\r\n    roomExists === true &&\r\n    isHostPresent === true &&\r\n    location === \"gameRoom\"\r\n  ) {\r\n    return <GameInProgress />;\r\n  }\r\n  if (\r\n    !currentUser &&\r\n    roomExists === true &&\r\n    isHostPresent === true &&\r\n    location === \"lobby\"\r\n  ) {\r\n    return (\r\n      <SignIn\r\n        buttonHandler={PlayerHandler}\r\n        buttonMessage=\"Join your friends game !\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {roomExists === true && isHostPresent === true && currentUser ? (\r\n        <HostLobby />\r\n      ) : (\r\n        <Spinner size={50} color={\"lightgrey\"} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LobbyWrapper;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\n\r\nconst ProgressBar = () => {\r\n  const { gamePhase } = React.useContext(GameRoomContext);\r\n  const { currentTrackGuesses } = React.useContext(CurrentUserContext);\r\n  const barRef = React.useRef(null);\r\n\r\n  const calculateGuessPosition = (time) => {\r\n    if (barRef !== null) {\r\n      let position = (time * barRef.current.clientWidth) / 30;\r\n      position.toFixed(0);\r\n      return position;\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Bar gamePhase={gamePhase} ref={barRef}></Bar>\r\n      {currentTrackGuesses &&\r\n        Object.values(currentTrackGuesses).map((guess) => {\r\n          if (guess.artist && guess.songName) {\r\n            return (\r\n              <Guess position={calculateGuessPosition(guess.time)}>\r\n                {guess.nickName}\r\n                <Tip />\r\n              </Guess>\r\n            );\r\n          }\r\n        })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  background: #eadaf0;\r\n  height: 10px;\r\n  border-radius: 40px;\r\n  margin-top: 10px;\r\n  position: relative;\r\n`;\r\n\r\nconst Transform = keyframes`\r\n0%{\r\n  transform:scaleX(1)\r\n}100%{\r\n  transform: scaleX(0)\r\n}\r\n`;\r\nconst Bar = styled.div`\r\n  height: 10px;\r\n  width: 100%;\r\n  border-radius: 40px;\r\n  background: #ff33be;\r\n  transform-origin: right;\r\n  animation: ${(props) => (props.gamePhase === \"playing\" ? Transform : null)}\r\n    31000ms linear;\r\n`;\r\n\r\nconst Guess = styled.div`\r\n  width: 150px;\r\n  font-size: 15px;\r\n  border-radius: 10px;\r\n  height: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: white;\r\n  margin-top: 10px;\r\n  position: absolute;\r\n  top: 10px;\r\n  left: ${(props) => props.position}px;\r\n  transform: translateX(-50%);\r\n  z-index: 5;\r\n`;\r\n\r\nconst Tip = styled.div`\r\n  position: absolute;\r\n  z-index: -5;\r\n  background: white;\r\n  height: 30px;\r\n  width: 30px;\r\n  transform: rotate(45deg) translateX(-20%) translateY(-20%);\r\n`;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport cassette from \"../../assets/cassette.png\";\r\nimport COLORS from \"../../COLORS\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\n\r\nconst Cassette = ({ time }) => {\r\n  const { result, trackInfo, gamePhase } = React.useContext(GameRoomContext);\r\n  const [artist, setArtist] = React.useState(null);\r\n  const [songName, setSongName] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (gamePhase === \"loading\") {\r\n      setArtist(null);\r\n      setSongName(null);\r\n    }\r\n    if (result === \"success\") {\r\n      setArtist(trackInfo.artist.name);\r\n      setSongName(trackInfo.title_short);\r\n    }\r\n    if (result === \"artist\") {\r\n      setArtist(trackInfo.artist.name);\r\n    }\r\n    if (result === \"songName\") {\r\n      setSongName(trackInfo.title_short);\r\n    }\r\n  }, [result, gamePhase]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src={cassette}></Image>\r\n      <Counter>{time}</Counter>\r\n      <Label>\r\n        <SongName>\r\n          <PlaceHolder>\r\n            {songName && (\r\n              <SongNameSpan songName={songName}>\r\n                {songName && songName}\r\n              </SongNameSpan>\r\n            )}\r\n          </PlaceHolder>\r\n\r\n          <Separator>/</Separator>\r\n          <PlaceHolder>\r\n            {artist && (\r\n              <ArtistSpan artist={artist}>{artist && artist}</ArtistSpan>\r\n            )}\r\n          </PlaceHolder>\r\n        </SongName>\r\n      </Label>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cassette;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  position: relative;\r\n  margin-bottom: -50px;\r\n  /* margin-top: 50px; */\r\n  transform: scale(0.8);\r\n`;\r\n\r\nconst Appear = keyframes`\r\nfrom{\r\n  width: 0;\r\n}\r\nto{\r\n  width: 100%;\r\n}`;\r\n\r\nconst SongNameSpan = styled.div`\r\n  font-family: \"Echizen\";\r\n  color: black;\r\n  /* width: 250px; */\r\n\r\n  max-width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-size: 40px;\r\n  transform-origin: left;\r\n  animation: ${(props) =>\r\n      props.songName !== null || props.artist !== null ? Appear : null}\r\n    500ms;\r\n`;\r\n\r\nconst ArtistSpan = styled.div`\r\n  font-family: \"Echizen\";\r\n  color: black;\r\n  /* width: 250px; */\r\n  max-width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-size: 40px;\r\n  transform-origin: left;\r\n  animation: ${(props) =>\r\n      props.songName !== null || props.artist !== null ? Appear : null}\r\n    500ms ease-in-out;\r\n`;\r\nconst PlaceHolder = styled.div`\r\n  width: 50%;\r\n  max-width: 50%;\r\n`;\r\n\r\nconst Separator = styled.div`\r\n  font-family: \"Echizen\";\r\n`;\r\nconst Image = styled.img`\r\n  filter: invert(21%) sepia(23%) saturate(7482%) hue-rotate(259deg)\r\n    brightness(87%) contrast(91%);\r\n`;\r\n\r\nconst Counter = styled.div`\r\n  width: fit-content;\r\n  position: absolute;\r\n  top: 140px;\r\n  font-size: 60px;\r\n  color: ${COLORS.midnight};\r\n  font-family: \"Digital\";\r\n`;\r\n\r\nconst Label = styled.div`\r\n  border: 4px solid ${COLORS.midnight};\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: white;\r\n  position: absolute;\r\n  width: 500px;\r\n  padding: 10px 50px;\r\n  top: 45px;\r\n  /* text-shadow: 2px 2px 2px ${COLORS.midnight}; */\r\n`;\r\n\r\nconst SongName = styled.div`\r\n  border-bottom: 2px solid ${COLORS.midnight};\r\n  height: 35px;\r\n  font-family: \"Echizen\";\r\n  display: flex;\r\n  /* justify-content: center; */\r\n  color: black;\r\n  text-align: center;\r\n  font-size: 40px;\r\n`;\r\n","import leven from \"leven\";\r\n\r\nconst calculateDistance = (searchTerm, artistOrSongName, valueToSearch) => {\r\n  const artistOrSong = artistOrSongName.toLowerCase();\r\n  const wordsArray = searchTerm.toLowerCase().split(\" \");\r\n  let allSubStrings = [...wordsArray];\r\n\r\n  wordsArray.forEach((word, index) => {\r\n    let string = \"\";\r\n    for (let i = 0; i <= index; i++) {\r\n      string = string + \" \" + wordsArray[i];\r\n    }\r\n    allSubStrings.push(string.trim());\r\n  });\r\n\r\n  wordsArray.forEach((word, index) => {\r\n    let newArray = wordsArray.slice(index);\r\n    allSubStrings.push(newArray.join(\" \").trim());\r\n  });\r\n  let ArtistResultMap = allSubStrings.map((item) => {\r\n    return {\r\n      searchTerm: item,\r\n      searchingFor: valueToSearch,\r\n      distance: leven(item, `${artistOrSong}`),\r\n    };\r\n  });\r\n  ArtistResultMap = ArtistResultMap.sort((a, b) => {\r\n    return a.distance - b.distance;\r\n  });\r\n\r\n  let marginOfError = Math.floor((artistOrSong.length / 10) * 4);\r\n  if (marginOfError > 5) {\r\n    marginOfError = 5;\r\n  }\r\n\r\n  if (ArtistResultMap[0].distance < marginOfError) {\r\n    return {\r\n      [`${valueToSearch}`]: true,\r\n      distance: ArtistResultMap[0].distance,\r\n      marginOfError: marginOfError,\r\n    };\r\n  } else {\r\n    return {\r\n      [`${valueToSearch}`]: false,\r\n      distance: ArtistResultMap[0].distance,\r\n      marginOfError: marginOfError,\r\n    };\r\n  }\r\n};\r\n\r\n// const levenTestResult = calculateDistance(\r\n//   \"the beatles\",\r\n//   \"the beach boys\",\r\n//   \"songName\"\r\n// );\r\n\r\n// console.log(levenTestResult);\r\n\r\nexport default calculateDistance;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\nimport calculateDistance from \"./LevenTest\";\r\nimport { ip } from \"../../ip\";\r\n\r\nfunction fetchHelper(roomId, currentUser, correctGuess) {\r\n  fetch(`${ip}/validateAnswer`, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({\r\n      currentUser: currentUser,\r\n      roomId: roomId,\r\n      correctGuess,\r\n    }),\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data))\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nconst SearchBar = () => {\r\n  const { roomId } = useParams();\r\n  const { currentUser, correctGuess, setCorrectGuess } = React.useContext(\r\n    CurrentUserContext\r\n  );\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n  const [placeHolderText, setPlaceHolderText] = React.useState(\r\n    \"Prepare for your first song !\"\r\n  );\r\n\r\n  const { gamePhase, result, setResult, trackInfo, round } = React.useContext(\r\n    GameRoomContext\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (gamePhase === \"loading\") {\r\n      setCorrectGuess({ artist: false, songName: false });\r\n      setResult(null);\r\n      setSearchTerm(\"\");\r\n\r\n      if (round === 10) {\r\n        setPlaceHolderText(\"Prepare for final ranking !\");\r\n        return;\r\n      }\r\n      if (round === 0) {\r\n        setPlaceHolderText(\"Prepare for your first song !\");\r\n        return;\r\n      }\r\n      setPlaceHolderText(\"Prepare for next song !\");\r\n    }\r\n    if (gamePhase === \"playing\") {\r\n      setPlaceHolderText(\"Guess the song and the artist !\");\r\n    }\r\n  }, [gamePhase, round]);\r\n\r\n  React.useEffect(() => {\r\n    if (result === \"success\") {\r\n      setPlaceHolderText(\"You got the correct answer !\");\r\n    }\r\n    if (result === \"artist\") {\r\n      setPlaceHolderText(\"Now guess the song name !\");\r\n    }\r\n    if (result === \"songName\") {\r\n      setPlaceHolderText(\"Now guess the artist !\");\r\n    }\r\n  }, [result]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input\r\n        result={result}\r\n        value={searchTerm}\r\n        placeholder={placeHolderText}\r\n        onChange={(ev) => {\r\n          setSearchTerm(ev.target.value);\r\n        }}\r\n        onAnimationEnd={(ev) => {\r\n          setResult(null);\r\n        }}\r\n        onKeyDown={(ev) => {\r\n          if (\r\n            ev.key === \"Enter\" &&\r\n            gamePhase === \"playing\" &&\r\n            result !== \"success\"\r\n          ) {\r\n            const artist = trackInfo.artist.name.toLowerCase();\r\n\r\n            const songName = trackInfo.title_short\r\n              .split(\"(\")[0]\r\n              .toLowerCase()\r\n              .trim();\r\n\r\n            const artistResult = calculateDistance(\r\n              searchTerm,\r\n              artist,\r\n              \"artist\"\r\n            );\r\n            const songNameResult = calculateDistance(\r\n              searchTerm,\r\n              songName,\r\n              \"songName\"\r\n            );\r\n            const d = new Date();\r\n            const timeStamp = d.getTime();\r\n\r\n            setSearchTerm(\"\");\r\n\r\n            if (\r\n              artistResult.artist === false &&\r\n              songNameResult.songName === false\r\n            ) {\r\n              setResult(\"fail\");\r\n              return;\r\n            }\r\n\r\n            if (artistResult.artist && songNameResult.songName) {\r\n              setResult(\"success\");\r\n              setCorrectGuess({\r\n                artist: true,\r\n                songName: true,\r\n              });\r\n              fetchHelper(roomId, currentUser, {\r\n                artist: true,\r\n                songName: true,\r\n                timeStamp: timeStamp,\r\n                previousGuess: correctGuess,\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (artistResult.artist) {\r\n              if (\r\n                correctGuess.songName === true &&\r\n                correctGuess.artist === false\r\n              ) {\r\n                setResult(\"success\");\r\n                setCorrectGuess({ artist: true, songName: true });\r\n                fetchHelper(roomId, currentUser, {\r\n                  artist: true,\r\n                  songName: true,\r\n                  timeStamp: timeStamp,\r\n                  previousGuess: correctGuess,\r\n                });\r\n                return;\r\n              }\r\n              setResult(\"artist\");\r\n              setCorrectGuess({ artist: true, songName: false });\r\n              fetchHelper(roomId, currentUser, {\r\n                artist: true,\r\n                songName: false,\r\n                timeStamp: null,\r\n                previousGuess: correctGuess,\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (songNameResult.songName) {\r\n              if (\r\n                correctGuess.songName === false &&\r\n                correctGuess.artist === true\r\n              ) {\r\n                setResult(\"success\");\r\n                setCorrectGuess({ artist: true, songName: true });\r\n                fetchHelper(roomId, currentUser, {\r\n                  artist: true,\r\n                  songName: true,\r\n                  timeStamp: timeStamp,\r\n                  previousGuess: correctGuess,\r\n                });\r\n                return;\r\n              }\r\n              setResult(\"songName\");\r\n              setCorrectGuess({ artist: false, songName: true });\r\n              fetchHelper(roomId, currentUser, {\r\n                artist: false,\r\n                songName: true,\r\n                timeStamp: null,\r\n                previousGuess: correctGuess,\r\n              });\r\n              return;\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default SearchBar;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Fail = keyframes`\r\n0%{\r\n  transform: translateX(0)\r\n}\r\n20%{\r\n  transform: translateX(15px)\r\n}\r\n40%{\r\n  transform: translateX(0px)\r\n}\r\n60%{\r\n  transform: translateX(-15px)\r\n}\r\n100%{\r\n  transform: translateX(0px)\r\n}\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 55px;\r\n  color: black;\r\n  border-radius: 40px;\r\n  border: none;\r\n  text-align: left;\r\n  font-size: 40px;\r\n  padding: 0 30px;\r\n  margin-top: 10px;\r\n\r\n  &::placeholder {\r\n    color: ${(props) => (props.result === \"success\" ? \" #34eb98\" : \"#eadaf0\")};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  animation: ${(props) => (props.result === \"fail\" ? Fail : null)} 500ms\r\n    ease-in-out;\r\n`;\r\n","import React from \"react\";\r\nimport COLORS from \"../../COLORS\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport GenericLabel from \"../Labels/GenericLabel\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PreviousSong = () => {\r\n  const { roomId } = useParams();\r\n  const { historyArray, round, setRoomId } = React.useContext(GameRoomContext);\r\n\r\n  React.useEffect(() => {\r\n    setRoomId(roomId);\r\n  }, [roomId, setRoomId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <GenericLabel>Previous Songs:</GenericLabel>\r\n      <SongListWrapper>\r\n        <RoundCounter>Round: {round < 10 ? round + 1 : round}/10</RoundCounter>\r\n        {historyArray\r\n          .map((song, index) => {\r\n            if (index < round) {\r\n              return (\r\n                <SongInfoWrapper key={song.title_short + index}>\r\n                  <SongArt src={song.album.cover_medium} />\r\n                  <InfoSection>\r\n                    <Title>{song.title_short}</Title>\r\n                    <Artist>{song.artist.name}</Artist>\r\n                  </InfoSection>\r\n                </SongInfoWrapper>\r\n              );\r\n            }\r\n            return;\r\n          })\r\n          .reverse()}\r\n      </SongListWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default PreviousSong;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 30px;\r\n  margin-bottom: 50px;\r\n  padding-right: 30px;\r\n`;\r\nconst Appear = keyframes`\r\n0%{\r\n  opacity: 0;\r\n  transform: translateY(-100%)\r\n\r\n}100%{\r\n  opacity: 1;\r\n  transform: translateY(0)\r\n\r\n}`;\r\n\r\nconst SongListWrapper = styled.div`\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  font-size: 30px;\r\n  width: 100%;\r\n  min-height: 100px;\r\n  background: white;\r\n  transition: 500ms;\r\n`;\r\n\r\nconst RoundCounter = styled.div`\r\n  width: 100%;\r\n  border-bottom: 1px solid ${COLORS.midnight};\r\n  font-size: 20px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst SongInfoWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n  animation: ${Appear} 800ms ease-in-out;\r\n  transform-origin: left;\r\n`;\r\n\r\nconst SongArt = styled.img`\r\n  width: 75px;\r\n  height: 75px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.span``;\r\n\r\nconst Artist = styled.span`\r\n  font-style: italic;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport GenericLabel from \"../Labels/GenericLabel\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\nimport { AiFillCrown } from \"react-icons/ai\";\r\nimport COLORS from \"../../COLORS\";\r\n\r\nconst correctGuessOutput = (usersCorrectGuess) => {\r\n  console.log(usersCorrectGuess);\r\n  if (usersCorrectGuess.artist && usersCorrectGuess.songName)\r\n    return `in ${usersCorrectGuess.time.toFixed(2)} seconds`;\r\n  if (usersCorrectGuess.artist) {\r\n    return \"The artist\";\r\n  }\r\n  if (usersCorrectGuess.songName) {\r\n    return \"The song's name \";\r\n  }\r\n};\r\n\r\nconst Ranking = () => {\r\n  const {\r\n    usersList,\r\n    setCurrentRoomId,\r\n    currentUser,\r\n    currentTrackGuesses,\r\n  } = React.useContext(CurrentUserContext);\r\n\r\n  const { roomId } = useParams();\r\n\r\n  React.useEffect(() => {\r\n    setCurrentRoomId(roomId);\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <GenericLabel>Ranking: </GenericLabel>\r\n      <UsersListWrapper>\r\n        {usersList.map((user, index) => {\r\n          return (\r\n            <UserWrapper key={user.playerId}>\r\n              <InfoWrapper>\r\n                <Rank>{index + 1}.</Rank>\r\n\r\n                <UserInfoWrapper>\r\n                  <NameWrapper>\r\n                    {user.role === \"host\" ? (\r\n                      <Icon\r\n                        style={{\r\n                          color: `${\r\n                            currentUser.playerId === user.playerId\r\n                              ? COLORS.midnight\r\n                              : \"black\"\r\n                          }`,\r\n                        }}\r\n                      >\r\n                        <AiFillCrown />\r\n                      </Icon>\r\n                    ) : null}\r\n                    <UserName\r\n                      style={{\r\n                        color: `${\r\n                          currentUser.playerId === user.playerId\r\n                            ? COLORS.midnight\r\n                            : \"black\"\r\n                        }`,\r\n                      }}\r\n                    >\r\n                      {user.nickName}\r\n                    </UserName>\r\n                  </NameWrapper>\r\n                  <CorrectGuessWrapper>\r\n                    Guessed:{\" \"}\r\n                    {currentTrackGuesses &&\r\n                      currentTrackGuesses[`${user.playerId}`] && (\r\n                        <span>\r\n                          {correctGuessOutput(\r\n                            currentTrackGuesses[`${user.playerId}`]\r\n                          )}\r\n                        </span>\r\n                      )}\r\n                  </CorrectGuessWrapper>\r\n                </UserInfoWrapper>\r\n              </InfoWrapper>\r\n              <ScoreInfoWrapper>\r\n                <Score>{user.points}pts.</Score>\r\n              </ScoreInfoWrapper>\r\n            </UserWrapper>\r\n          );\r\n        })}\r\n      </UsersListWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Ranking;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 30px;\r\n  margin-bottom: 50px;\r\n  padding-right: 30px;\r\n`;\r\n\r\nconst UsersListWrapper = styled.div`\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  font-size: 30px;\r\n  width: 100%;\r\n  background: white;\r\n  transition: 500ms;\r\n`;\r\n\r\nconst UserWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 5px 0px;\r\n`;\r\n\r\nconst InfoWrapper = styled.div`\r\n  display: flex;\r\n  max-width: 80%;\r\n`;\r\n\r\nconst UserInfoWrapper = styled.div``;\r\n\r\nconst Rank = styled.h1`\r\n  font-size: 40px;\r\n  font-weight: 800;\r\n  margin-right: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  width: fit-content;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst Score = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ScoreInfoWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst CorrectGuessWrapper = styled.div`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst NameWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Cassette from \"./Cassette\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport PreviousSong from \"./PreviousSongs\";\r\nimport * as firebase from \"firebase\";\r\nimport Ranking from \"./Ranking\";\r\nimport { FiVolume, FiVolumeX, FiVolume1, FiVolume2 } from \"react-icons/fi\";\r\nimport { ip } from \"../../ip\";\r\n\r\nconst asyncRequest = async (roomId) => {\r\n  await fetch(`${ip}/updatePhase`, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({ roomId, currentPhase: \"playing\" }),\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n    })\r\n    .catch((err) => console.log(err));\r\n\r\n  fetch(`${ip}/updateRound?roomId=${roomId}`, {\r\n    method: \"GET\",\r\n    headers: { accept: \"application/json\" },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst GameRoom = () => {\r\n  const { roomId } = useParams();\r\n  const {\r\n    trackUrl,\r\n    setTrackUrl,\r\n    gamePhase,\r\n    setGamePhase,\r\n    setTrackInfo,\r\n    round,\r\n  } = React.useContext(GameRoomContext);\r\n  const { currentUser } = React.useContext(CurrentUserContext);\r\n  const [time, setTime] = React.useState(5);\r\n  const [volume, setVolume] = React.useState(0.5);\r\n\r\n  const audioRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    audioRef.current.volume = volume;\r\n  }, [audioRef, volume]);\r\n\r\n  //This sets the interval for the timer\r\n  React.useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      if (time > 0) {\r\n        setTime(time - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    //Host updates the phase when the host timer reaches 0\r\n    if (time === 0 && gamePhase === \"loading\" && currentUser.role === \"host\") {\r\n      fetch(`${ip}/updatePhase`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ currentPhase: \"loading\", roomId: roomId }),\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n        });\r\n    }\r\n    if (time === 0 && gamePhase === \"playing\" && currentUser.role === \"host\") {\r\n      asyncRequest(roomId);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [time, gamePhase]);\r\n\r\n  //This checks for gamePhase change and sets the timer to the appropriate phase\r\n  React.useEffect(() => {\r\n    const gamePhaseRef = firebase.database().ref(`Rooms/${roomId}/phase`);\r\n    gamePhaseRef.on(\"value\", (snapshot) => {\r\n      let phase = snapshot.val();\r\n      if (phase === \"playing\") {\r\n        if (round > 9) {\r\n          setGamePhase(phase);\r\n          return;\r\n        }\r\n        setTime(30);\r\n        audioRef.current.play();\r\n        console.log(\"playtrack\");\r\n      }\r\n      if (phase === \"loading\") {\r\n        setTime(5);\r\n        audioRef.current.pause();\r\n        console.log(\"stopTrack\");\r\n      }\r\n      setGamePhase(phase);\r\n    });\r\n    return () => {\r\n      const gamePhaseRef = firebase.database().ref(`Rooms/${roomId}/phase`);\r\n      gamePhaseRef.off();\r\n    };\r\n  }, [roomId, round]);\r\n\r\n  //This updates the current song during the loading stage\r\n  React.useEffect(() => {\r\n    if (gamePhase === \"loading\" && currentUser.role === \"host\") {\r\n      console.log(\"in fetch track\");\r\n      fetch(`${ip}/updateCurrentTrack`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ roomId: roomId }),\r\n        headers: {\r\n          Accept: \"applicatition/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          // setTrackUrl(data.selectedSongUrl);\r\n        });\r\n    }\r\n  }, [gamePhase]);\r\n\r\n  React.useEffect(() => {\r\n    const currentTrackInfo = firebase\r\n      .database()\r\n      .ref(`/Rooms/${roomId}/currentTrack/trackInfo`);\r\n    currentTrackInfo.on(\"value\", (snapshot) => {\r\n      let currentTrackInfo = snapshot.val();\r\n      if (currentTrackInfo) {\r\n        setTrackInfo(currentTrackInfo);\r\n        setTrackUrl(currentTrackInfo.preview);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      currentTrackInfo.off();\r\n    };\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <SlidderWrapper>\r\n        <Button\r\n          onClick={() => {\r\n            if (volume > 0) {\r\n              setVolume(0);\r\n              return;\r\n            }\r\n            if (volume === 0) {\r\n              setVolume(0.5);\r\n              return;\r\n            }\r\n          }}\r\n        >\r\n          {volume === 0.5 && <FiVolume size={35} />}\r\n          {volume === 0 && <FiVolumeX size={35} />}\r\n          {volume < 0.5 && volume > 0 && <FiVolume1 size={35} />}\r\n          {volume > 0.5 && <FiVolume2 size={35} />}\r\n        </Button>\r\n        <Slider\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          value={volume * 100}\r\n          onChange={(ev) => {\r\n            setVolume(ev.target.value / 100);\r\n          }}\r\n        />\r\n      </SlidderWrapper>\r\n\r\n      <Player src={trackUrl} ref={audioRef}>\r\n        I'm sorry, your browser doesn't support audio\r\n      </Player>\r\n      <SearchBar />\r\n      <ProgressBar />\r\n      <Cassette time={time}></Cassette>\r\n      <BottomSection>\r\n        <PreviousSong />\r\n        <Ranking />\r\n      </BottomSection>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 40px;\r\n`;\r\n\r\nconst Player = styled.audio``;\r\n\r\nconst BottomSection = styled.div`\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 50% 50%;\r\n`;\r\n\r\nconst Slider = styled.input`\r\n  width: 100%;\r\n`;\r\n\r\nconst SlidderWrapper = styled.div`\r\n  display: flex;\r\n  padding: 5px;\r\n  align-items: center;\r\n  background: white;\r\n  border-radius: 10px;\r\n  width: 50px;\r\n  transition: width 1s, opacity 1s;\r\n  margin-bottom: 15px;\r\n\r\n  input:nth-child(2) {\r\n    opacity: 0;\r\n    transition: opacity 0.8s;\r\n  }\r\n\r\n  :hover {\r\n    width: 200px;\r\n    input:nth-child(2) {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  width: 45px;\r\n  height: 45px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default GameRoom;\r\n","import React from \"react\";\r\nimport COLORS from \"../../COLORS\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../Button/Button\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\nimport { LobbyContext } from \"../../LobbyContext\";\r\nimport { AiFillCrown } from \"react-icons/ai\";\r\nimport { ip } from \"../../ip\";\r\n\r\nconst GameOverScreen = () => {\r\n  const { usersList, setCurrentRoomId, currentUser } = React.useContext(\r\n    CurrentUserContext\r\n  );\r\n  const { setRound, setHistoryArray, setGameStarted } = React.useContext(\r\n    GameRoomContext\r\n  );\r\n  const { roomId } = useParams();\r\n  const { location, deletePlaylist } = React.useContext(LobbyContext);\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if (location !== \"gameRoom\") {\r\n      history.push(`/lobby/${roomId}`);\r\n    }\r\n    return () => {\r\n      setRound(0);\r\n      deletePlaylist();\r\n      setHistoryArray([]);\r\n      setGameStarted(false);\r\n    };\r\n  }, [location, roomId]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentRoomId(roomId);\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Here is the final ranking !</Title>\r\n      <UsersListWrapper>\r\n        {usersList.map((user, index) => {\r\n          return (\r\n            <UserWrapper key={user.playerId}>\r\n              <InfoWrapper>\r\n                <Rank>{index + 1}.</Rank>\r\n\r\n                <UserInfoWrapper>\r\n                  <NameWrapper>\r\n                    {user.role === \"host\" ? (\r\n                      <Icon\r\n                        style={{\r\n                          color: `${\r\n                            currentUser.playerId === user.playerId\r\n                              ? COLORS.midnight\r\n                              : \"black\"\r\n                          }`,\r\n                        }}\r\n                      >\r\n                        <AiFillCrown />\r\n                      </Icon>\r\n                    ) : null}\r\n                    <UserName\r\n                      style={{\r\n                        color: `${\r\n                          currentUser.playerId === user.playerId\r\n                            ? COLORS.midnight\r\n                            : \"black\"\r\n                        }`,\r\n                      }}\r\n                    >\r\n                      {user.nickName}\r\n                    </UserName>\r\n                  </NameWrapper>\r\n                </UserInfoWrapper>\r\n              </InfoWrapper>\r\n              <ScoreInfoWrapper>\r\n                <Score>{user.points}pts.</Score>\r\n              </ScoreInfoWrapper>\r\n            </UserWrapper>\r\n          );\r\n        })}\r\n      </UsersListWrapper>\r\n      {currentUser.role === \"host\" ? (\r\n        <ButtonsWrapper>\r\n          <Button\r\n            handler={() => {\r\n              fetch(`${ip}/${roomId}/lobbyReset`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              })\r\n                .then((res) => res.json())\r\n                .then((data) => console.log(data))\r\n                .catch((err) => console.log(err));\r\n            }}\r\n          >\r\n            Return to Lobby\r\n          </Button>\r\n          <Button\r\n            handler={() => {\r\n              fetch(`${ip}/${roomId}/GameReset`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              })\r\n                .then((res) => res.json())\r\n                .then((data) => console.log(data))\r\n                .catch((err) => console.log(err));\r\n            }}\r\n          >\r\n            Restart Game\r\n          </Button>\r\n        </ButtonsWrapper>\r\n      ) : (\r\n        <Title>\r\n          Plase wait for the host to choose to return to the lobby or to restart\r\n          game.\r\n        </Title>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default GameOverScreen;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-family: \"Echizen\";\r\n  font-size: 60px;\r\n  text-shadow: 2px 2px 2px ${COLORS.midnight};\r\n  color: white;\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst UsersListWrapper = styled.div`\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  font-size: 30px;\r\n  width: 50%;\r\n  background: white;\r\n  transition: 500ms;\r\n  text-shadow: none;\r\n  color: black;\r\n  font-family: \"\";\r\n`;\r\n\r\nconst UserWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 5px 0px;\r\n`;\r\n\r\nconst InfoWrapper = styled.div`\r\n  display: flex;\r\n  max-width: 80%;\r\n`;\r\n\r\nconst UserInfoWrapper = styled.div``;\r\n\r\nconst Rank = styled.h1`\r\n  font-size: 40px;\r\n  font-weight: 800;\r\n  margin-right: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  width: fit-content;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst Score = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ScoreInfoWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst NameWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n  margin: 20px 0px;\r\n`;\r\n","import React from \"react\";\r\nimport GameRoom from \"./GameRoom\";\r\nimport GameOver from \"./GameOver\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { GameRoomContext } from \"../../GameRoomContext\";\r\nimport { CurrentUserContext } from \"../../CurrentUserContext\";\r\nimport { LobbyContext } from \"../../LobbyContext\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport ErrorScreen from \"../ErrorScreen/ErrorScreen\";\r\nimport * as firebase from \"firebase\";\r\nimport { ip } from \"../../ip\";\r\n\r\nconst GameRoomWrapper = () => {\r\n  const {\r\n    round,\r\n    gamePhase,\r\n    gameRoomExists,\r\n    setGameRoomExists,\r\n    setGameStarted,\r\n    setHistoryArray,\r\n  } = React.useContext(GameRoomContext);\r\n  const { currentUser, setCurrentUser, isHostPresent } = React.useContext(\r\n    CurrentUserContext\r\n  );\r\n  const { deletePlaylist } = React.useContext(LobbyContext);\r\n  const history = useHistory();\r\n  const { roomId } = useParams();\r\n  console.log(gameRoomExists);\r\n\r\n  React.useEffect(() => {\r\n    const roomRef = firebase.database().ref(`Rooms/${roomId}`);\r\n\r\n    roomRef.on(\"value\", (snapshot) => {\r\n      setGameRoomExists(snapshot.exists());\r\n    });\r\n  }, [roomId]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(history.action);\r\n\r\n    return () => {\r\n      if (history.action === \"POP\") {\r\n        history.push(\"/\");\r\n        setCurrentUser(null);\r\n        setGameStarted(false);\r\n        deletePlaylist();\r\n        setHistoryArray([]);\r\n\r\n        fetch(`${ip}/deleteUser`, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify({ currentUser, roomId }),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n          });\r\n        return;\r\n      }\r\n    };\r\n  }, [history, currentUser, roomId]);\r\n\r\n  React.useEffect(() => {\r\n    setGameStarted(true);\r\n  }, []);\r\n\r\n  if (gameRoomExists === false) {\r\n    return (\r\n      <ErrorScreen\r\n        title=\"404 - Room not found\"\r\n        message={\r\n          \"We're sorry, we couldn't find the room you are trying to join\"\r\n        }\r\n      />\r\n    );\r\n  }\r\n  if (isHostPresent === false) {\r\n    return (\r\n      <ErrorScreen\r\n        title=\"The host has left\"\r\n        message=\"We're sorry, the host has left and the game has ended. Return to the homepage to start a new game.\"\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!currentUser && gameRoomExists) {\r\n    return <>{history.push(`/lobby/${roomId}`)}</>;\r\n  }\r\n\r\n  if (round > 9 && gamePhase === \"playing\" && gameRoomExists === true) {\r\n    return <GameOver />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {gameRoomExists === true && isHostPresent === true && currentUser ? (\r\n        <GameRoom />\r\n      ) : (\r\n        <Spinner size={50} color={\"lightgrey\"} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameRoomWrapper;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport COLORS from \"./COLORS\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n*{\r\n  box-sizing:border-box;\r\n  font-family: \"Roboto Condensed\", sans-serif;\r\n  /* font-family:'Echizen'; */\r\n  /* color: black; */\r\n}\r\n\r\nbody{\r\n  background: ${COLORS.main}\r\n}\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\t/* font: inherit; */\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Background from \"./Background/Background\";\r\nimport Header from \"./Header/Header\";\r\nimport SignIn from \"./SignIn/SignIn\";\r\nimport HostHandler from \"./SignIn/HostHandler\";\r\nimport LobbyWrapper from \"./Lobby/LobbyWrapper\";\r\nimport GameRoomWrapper from \"./GameRoom/GameRoomWrapper\";\r\nimport GlobalStyles from \"../GlobalStyles\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Background>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <SignIn\r\n              buttonHandler={HostHandler}\r\n              buttonMessage=\"Create Private Room\"\r\n            />\r\n          </Route>\r\n          <Route path=\"/lobby/:roomId\">\r\n            <LobbyWrapper />\r\n          </Route>\r\n          <Route path=\"/gameroom/:roomId\">\r\n            <GameRoomWrapper />\r\n          </Route>\r\n        </Switch>\r\n        <GlobalStyles />\r\n      </Background>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport FireBaseContextProvider from \"./FirebaseContext\";\r\nimport CurrentUserContextProvider from \"./CurrentUserContext\";\r\nimport LobbyContextProvider from \"./LobbyContext\";\r\nimport GameRoomContextProvider from \"./GameRoomContext\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <FireBaseContextProvider>\r\n    <CurrentUserContextProvider>\r\n      <LobbyContextProvider>\r\n        <GameRoomContextProvider>\r\n          <App />\r\n        </GameRoomContextProvider>\r\n      </LobbyContextProvider>\r\n    </CurrentUserContextProvider>\r\n  </FireBaseContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}